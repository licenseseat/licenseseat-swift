name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: ["15.0.1"]
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer"

      - name: Swift version
        run: swift --version

      - name: Build
        run: swift build -v

      - name: Run tests
        run: swift test -v --enable-code-coverage

      - name: Generate coverage report
        run: |
          xcrun llvm-cov export \
            .build/debug/LicenseSeatSDKPackageTests.xctest/Contents/MacOS/LicenseSeatSDKPackageTests \
            -instr-profile .build/debug/codecov/default.profdata \
            -format="lcov" > coverage.lcov

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
          fail_ci_if_error: true

  test-linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        swift: ["5.9"]
    container:
      image: swift:${{ matrix.swift }}
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: swift build -v

      - name: Run tests
        run: swift test -v

  lint:
    name: SwiftLint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint --quiet

  documentation:
    name: Build Documentation
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build DocC
        run: |
          swift package --allow-writing-to-directory ./docs \
            generate-documentation --target LicenseSeatSDK \
            --output-path ./docs \
            --transform-for-static-hosting \
            --hosting-base-path licenseseat-swift

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy-docs:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: documentation
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
